{"version":3,"sources":["components/Form/index.js","components/Table/index.js","components/Donut/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","react_default","a","createElement","className","type","placeholder","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidUpdate","fillForm","parts","map","x","id","firstName","lastName","part","key","onClick","handleDelete","bind","assertThisInitialized","URL","concat","console","log","axios","delete","then","res","data","catch","err","state","React","Component","Donut","App","getParts","_this2","get","response","setState","components_Form","Table_Table","components_Donut","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5938319f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = () => {\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Participation\" />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary mb-2\">Send</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nexport default class Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        this.fillForm = this.fillForm.bind(this);\r\n    };\r\n\r\n    // Functions\r\n    componentDidUpdate = () => {\r\n        this.fillForm();\r\n    }\r\n\r\n    fillForm = () => {\r\n        // console.log(\"form\", this.props.parts);\r\n        return this.props.parts.map((x) => {\r\n            const { id, firstName, lastName, part } = x;\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{firstName}</td>\r\n                    <td>{lastName}</td>\r\n                    <td>{part}</td>\r\n                    <td>\r\n                        <button onClick={this.handleDelete.bind(this, {id})}>X</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    };\r\n\r\n    handleDelete = (id) => {\r\n        const URL = `/api/form/${id.id}`;\r\n        console.log(URL);\r\n        axios.delete(URL)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    // Render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First</th>\r\n                            <th>Last</th>\r\n                            <th>Participation</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.fillForm()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Donut = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Donut;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Form from \"./components/Form\"\nimport Table from \"./components/Table\"\nimport Donut from \"./components/Donut\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      parts : []\n    };\n    this.getParts = this.getParts.bind(this);\n  };\n\n  // Functions\n  componentDidMount() {\n    this.getParts();\n  };\n\n  componentDidUpdate = () => {\n    this.getParts();\n}\n\n  getParts() {\n    axios.get(\"/api/form\").then(response => {\n      if (response.data) {\n        this.setState({\n          parts : response.data\n        });\n      }\n    })\n  };\n\n  // App Render\n  render() {\n    return (\n      <div className=\"container\">\n        <section className=\"row\">\n          <div className=\"col-md-12\">\n            <Form />\n          </div>\n        </section>\n        <section className=\"row\">\n          <div className=\"col-md-12\">\n            <h1>Data!</h1>\n            <h3>Lorem Ipsum...</h3>\n          </div>\n        </section>\n        <section className=\"row\">\n          <div className=\"col-md-8\">\n            <Table \n              parts= {this.state.parts}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <Donut />\n          </div>\n        </section>\n      </div>\n    );\n  };\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}