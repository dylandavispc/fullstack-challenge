{"version":3,"sources":["components/Form/index.js","components/Table/index.js","components/Donut/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","numberVerify","e","target","value","test","onChange","submit","event","preventDefault","newPart","parseInt","state","part","sum","add","partLength","parts","length","post","setTimeout","reload","alert","map","x","_this$state","fName","lName","axios","firstName","lastName","then","res","status","setState","bind","assertThisInitialized","defineProperty","name","react_default","a","createElement","className","type","placeholder","onClick","disabled","React","Component","Table","componentDidUpdate","fillForm","i","colors","colorPicker","trStyle","backgroundColor","id","style","key","_handleDelete","URL","concat","console","log","delete","data","catch","err","scope","options","legend","display","Donut","op","names","labels","datasets","hoverBackgroundColor","fillChart","push","es","App","loaded","getParts","loader","_this2","get","response","Form_Form","Table_Table","Donut_Donut","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca659768.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nexport default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fName: \"\",\r\n            lName: \"\",\r\n            part: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.numberVerify = this.numberVerify.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.post = this.post.bind(this);\r\n    };\r\n\r\n    // Functions\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    //!!! Checks if number before submitting to onChange Function\r\n    numberVerify = e => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.onChange(e);\r\n        };\r\n    };\r\n\r\n    submit = event => {\r\n        event.preventDefault();\r\n        //!!! Checking to see if participation exceeds the maximum participation percentage\r\n        //!!! or participant count exceeds 10\r\n        let newPart = parseInt(this.state.part);\r\n        let sum = this.add();\r\n        let partLength = this.props.parts.length;\r\n        if (sum + newPart <= 100 && partLength < 11) {\r\n            this.post();\r\n            setTimeout(() => {\r\n                this.props.reload();\r\n            }, 200);\r\n            \r\n            // alert(\"Participant Added!!!\");\r\n        }\r\n        else {\r\n            alert(\"Participation percentage cannot exceed 100% or 10 participants. Please remove participant or input smaller percentage before sending.\");\r\n        };\r\n    };\r\n\r\n    add = () => {\r\n        let sum = 0;\r\n        this.props.parts.map((x) => {\r\n            sum += x.part;\r\n        });\r\n        return sum;\r\n    }\r\n\r\n    post = () => {\r\n        const { fName, lName, part } = this.state;\r\n        axios.post(\"/api/form\", {\r\n            firstName: fName,\r\n            lastName: lName,\r\n            part: part\r\n        })\r\n        .then(res => {\r\n            //!!! if success: empty form and re-render\r\n            if (res.status === 200) {\r\n                this.setState({\r\n                    fName : \"\", \r\n                    lName : \"\", \r\n                    part : \"\"\r\n                });\r\n            };\r\n        });\r\n    };\r\n\r\n    // Render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar\">\r\n                <form>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <input \r\n                                name=\"fName\"\r\n                                value={this.state.fName}\r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"First name\" \r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <input \r\n                                name=\"lName\"\r\n                                value={this.state.lName}\r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Last name\" \r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <input \r\n                                name=\"part\"\r\n                                value={this.state.part}\r\n                                type=\"text\"\r\n                                className=\"form-control\" \r\n                                placeholder=\"Participation\" \r\n                                onChange={this.numberVerify}\r\n                            />\r\n                        </div>\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-success mb-2\" \r\n                            onClick={this.submit}\r\n                            disabled={!(this.state.fName && this.state.lName && this.state.part)}\r\n                        >\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                </nav>\r\n                \r\n            </div>\r\n        );\r\n    };\r\n};","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nexport default class Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.fillForm = this.fillForm.bind(this);\r\n        this._handleDelete = this._handleDelete.bind(this);\r\n    };\r\n\r\n    // Functions\r\n    componentDidUpdate = () => {\r\n        this.fillForm()\r\n    }\r\n\r\n    fillForm = () => {\r\n        let i = 0;\r\n        const colors = [\r\n            '#66ffcc',\r\n            '#66ccff',\r\n            '#cc99ff',\r\n            '#ff99cc',\r\n            '#ffcc99',\r\n            '#99ff66',\r\n            '#00ff00',\r\n            '#00ffff',\r\n            '#ff66ff',\r\n            '#ff5050',\r\n        ];\r\n        const colorPicker = () => {\r\n            const trStyle = {backgroundColor: colors[i]}\r\n            i++;\r\n            return trStyle;\r\n        }\r\n        return this.props.parts.map((x) => {\r\n            const { id, firstName, lastName, part } = x;\r\n            return (\r\n                <tr style={colorPicker()} key={id}>\r\n                    <td>{firstName}</td>\r\n                    <td>{lastName}</td>\r\n                    <td>{part}%</td>\r\n                    <td>\r\n                        <button className=\"delete\" onClick={() => {this._handleDelete(id) }}>x</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    _handleDelete = (id) => {\r\n        const URL = `/api/form/${id}`;\r\n        console.log(URL);\r\n        axios.delete(URL)\r\n            .then(res => {\r\n                this.props.reload();\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    // Render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col-md-4\">First</th>\r\n                            <th scope=\"col-md-4\">Last</th>\r\n                            <th scope=\"col-md-3\">Participation</th>\r\n                            <th scope=\"col-md-1\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.fillForm()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n};","import React, { Component } from \"react\";\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport \"./style.css\";\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false\r\n    }\r\n};\r\n\r\nexport default class Donut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            names: [],\r\n            parts: []\r\n        };\r\n        this.op = this.op.bind(this);\r\n        this.fillChart = this.fillChart.bind(this);\r\n    };\r\n\r\n    // Functions\r\n\r\n    op = (names, parts) => {\r\n        const data = {\r\n            labels: names,\r\n            datasets: [{\r\n                data: parts,\r\n                backgroundColor: [\r\n                '#66ffcc',\r\n                '#66ccff',\r\n                '#cc99ff',\r\n                '#ff99cc',\r\n                '#ffcc99',\r\n                '#99ff66',\r\n                '#00ff00',\r\n                '#00ffff',\r\n                '#ff66ff',\r\n                '#ff5050',\r\n                ],\r\n                hoverBackgroundColor: [\r\n                '#66ffcc',\r\n                '#66ccff',\r\n                '#cc99ff',\r\n                '#ff99cc',\r\n                '#ffcc99',\r\n                '#99ff66',\r\n                '#00ff00',\r\n                '#00ffff',\r\n                '#ff66ff',\r\n                '#ff5050',\r\n                ]\r\n            }]\r\n        };\r\n        return data;\r\n    }\r\n\r\n    fillChart = () => {\r\n        let names = [];\r\n        let parts = [];\r\n        this.props.parts.map((x) => {\r\n            const { firstName, lastName, part } = x;\r\n            let name = firstName + \" \" + lastName;\r\n            names.push(name);\r\n            parts.push(part);\r\n        });\r\n        const chart = this.op(names, parts);\r\n        return chart;\r\n    };\r\n\r\n    // Render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Doughnut data={this.fillChart()} options={options} />\r\n            </div>\r\n        );\r\n    };\r\n};","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Form from \"./components/Form\"\nimport Table from \"./components/Table\"\nimport Donut from \"./components/Donut\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      parts : [],\n      loaded: false\n    };\n    this.getParts = this.getParts.bind(this);\n    this.loader = this.loader.bind(this);\n  };\n\n  // Functions\n  componentDidMount() {\n    this.getParts();\n  };\n\n  componentDidUpdate = () => {\n    if (!this.state.loaded) {\n      this.getParts();\n    };\n  };\n\n  getParts() {\n    this.setState({\n      loaded: true\n    })\n    axios.get(\"/api/form\").then(response => {\n      if (response.data) {\n        this.setState({\n          parts : response.data\n        });\n      }\n    })\n  };\n\n  loader() {\n    console.log(\"loading\")\n    this.setState({\n      loaded: false\n    });\n  };\n\n  // App Render\n  render() {\n    return (\n      <div>\n        <div className=\"navRow\">\n          \n        </div>\n        <div className=\"container\">\n          <section className=\"row\">\n            <div className=\"col-md-12\">\n            <Form \n            parts = {this.state.parts}\n            reload = {this.loader}\n          />\n            </div>\n          </section>\n          <section className=\"row\">\n            <div className=\"col-md-12 text-center headDiv\">\n              <h1>Data!</h1>\n              <h3>Lorem Ipsum...</h3>\n            </div>\n          </section>\n          <section className=\"row\">\n            <div className=\"col-md-6\">\n              <Table \n                parts = {this.state.parts}\n                reload = {this.loader}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <Donut \n                parts = {this.state.parts}\n              />\n            </div>\n          </section>\n        </div>\n        <footer className=\"footer\">\n          <p>dylandavispc@gmail.com</p>\n        </footer>\n      </div>\n      \n    );\n  };\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}